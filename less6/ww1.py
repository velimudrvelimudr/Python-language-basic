"""
Университет GeekBrains
Курс: Основы языка Python.
Урок 6.
Задание 1.
Автор: Михаил Духонин
Создан: 28 Май 2020.
Задание:
Создать класс TrafficLight (светофор) и определить у него один атрибут color
(цвет) и метод running (запуск). Атрибут реализовать как приватный. В рамках метода
реализовать переключение светофора в режимы: красный, желтый, зеленый.
Продолжительность первого состояния (красный) составляет 7 секунд, второго (желтый)
— 2 секунды, третьего (зеленый) — на ваше усмотрение.  Переключение между режимами
должно осуществляться только в указанном порядке (красный, желтый, зеленый).
Проверить работу примера, создав экземпляр и вызвав описанный метод.
Задачу можно усложнить, реализовав проверку порядка режимов, и при его нарушении выводить соответствующее сообщение и завершать скрипт.

"""

"""
В общем, если этот файл запустить из консоли, то всё работает.
Если его скопировать в файл с нормальным именем, и попробовать
импортировать из него TrafficLight, то running работать не будет.
Типа нет атрибута self._color. В файле w1.py заменил в методе
self._color на TrafficLight._color, и running в импортированном классе заработал.
"""

# Импорт
from time import sleep
from itertools import cycle

# Функции.

class TrafficLight:
    _color = "Зелёный"

    def running(self, count = 1):
        # Внутренние переменные, которые не будут атрибутами.
        colors = ["Красный", "Жёлтый", "Зелёный"]
        c = 0

        for clr in cycle(colors):
            # Ну просили проверку... Она есть у меня...
            # Правда, не представляю ситуацию, в которой она сработает.
            if self._color == colors[colors.index(clr) - 1]:
                self._color = clr # А вот хз, что здесь нужно использовать - self или имя класса...
            else:
                print('Ошибка порядка переключений. Выходим!')
                break

            if self._color == "Красный":
                print(self._color)
                sleep(7)
            elif self._color == "Жёлтый":
                print(self._color)
                sleep(2)
            elif self._color == "Зелёный":
                print(self._color)
                sleep(10)
            c += 1
            if c / 3 == count:
                # Выходим после прогона заданного количества циклов переключений.
                break

def main():
    """Логика программы."""
    tl = TrafficLight()
    tl.running(2)



if __name__ == '__main__':
    main()
    print("Готово!")
